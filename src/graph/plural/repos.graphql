fragment Publisher on Publisher {
  id
  name
  phone
  avatar
  description
  backgroundColor
}

fragment MinRepo on Repository {
  category
  community {
    discord
    slack
    homepage
    gitUrl
    twitter
  }
  darkIcon
  description
  gitUrl
  homepage
  icon
  id
  license {
    name
    url
  }
  mainBranch
  name
  private
  publisher {
    ...Publisher
  }
  readme
  releaseStatus
  tags {
    tag
  }
  trending
  verified
  recipes {
    ...MinRecipe
  }
}

fragment FullRepo on Repository {
  ...MinRepo
  readme
  homepage
  gitUrl
  license {
    url
  }
  recipes {
    ...Recipe
  }
}

query Repos {
  repositories(first: 5000) {
    edges {
      node {
        ...MinRepo
      }
    }
  }
}

query Repo($name: String) {
  repository(name: $name) {
    ...FullRepo
  }
}

fragment Category on CategoryInfo {
  category
  count
}

fragment MinStack on Stack {
  id
  name
  displayName
  description
  featured
  creator {
    id
    name
  }
  collections {
    id
    provider
    bundles {
      recipe {
        repository {
          ...MinRepo
          tags {
            tag
          }
        }
      }
    }
  }
}

fragment FullStack on Stack {
  ...MinStack
}

fragment PageInfo on PageInfo {
  endCursor
  hasNextPage
}

query Stacks($featured: Boolean) {
  stacks(featured: $featured, first: 50) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...MinStack
      }
    }
  }
}

query Stack($name: String!, $provider: Provider! = AWS) {
  stack(name: $name, provider: $provider) {
    ...FullStack
  }
}

query Categories {
  categories {
    ...Category
  }
}

fragment Tag on GroupedTag {
  tag
  count
}

query Tags($cursor: String) {
  tags(type: REPOSITORIES, first: 5000, after: $cursor) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...Tag
      }
    }
  }
}
